% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/univLinReg.R
\name{big_univLinReg}
\alias{big_univLinReg}
\title{Column-wise linear regression}
\usage{
big_univLinReg(X., y.train, ind.train = rows_along(X.),
  ind.col = cols_along(X.), covar.train = NULL, ncores = 1,
  thr.eigval = 1e-04)
}
\arguments{
\item{X.}{Either a \link[=big.matrix-class]{big.matrix} or
a \link[=big.matrix.descriptor-class]{big.matrix.descriptor}.}

\item{y.train}{Vector of responses, corresponding to \code{ind.train}.}

\item{ind.train}{An optional vector of the row indices that are used,
for the training part. If not specified, all rows are used.
\strong{Don't use negative indices.}}

\item{ind.col}{An optional vector of the column indices that are used.
If not specified, all columns are used. \strong{Don't use negative indices.}}

\item{covar.train}{Matrix of covariables to be added in each model to correct
for confounders (e.g. the scores of PCA), corresponding to \code{ind.train}.
Default is \code{NULL} and corresponds to only adding an intercept to each model.}

\item{ncores}{Number of cores used. Default doesn't use parallelism.
We advise you to use only half of the cores you have.}

\item{thr.eigval}{Threshold to remove "unsignificant" singular vectors.
Default is \code{1e-4}.}
}
\value{
A data.frame with 3 elements:
\enumerate{
\item the slopes of each regression,
\item the standard errors of each slope,
\item the t-scores associated with each slope.
This is also an object of class \code{mhtest}. See \code{methods(class = "mhtest")}.
}
}
\description{
Slopes of column-wise linear regressions of each column
of a \code{big.matrix}, with some other associated statistics.
Covariates can be added to correct for confounders.
}
\examples{
set.seed(1)

X.desc <- big_attachExtdata()
n <- nrow(X.desc)
y <- rnorm(n)
covar <- matrix(rnorm(n * 3), n)

X1 <- attach.BM(X.desc)[, 1] # only first column of the `big.matrix`

# Without covar
test <- big_univLinReg(X.desc, y)
## new class `mhtest`
class(test)
attr(test, "transfo")
attr(test, "predict")
## plot results
plot(test)
plot(test, type = "Volcano")
## To get p-values associated with the test
test$p.value <- predict(test, log10 = FALSE)
str(test)
summary(lm(y ~ X1))$coefficients[2, ]

# With all data
str(big_univLinReg(X.desc, y, covar = covar))
summary(lm(y ~ X1 + covar))$coefficients[2, ]

# With only half of the data
ind.train <- sort(sample(n, n/2))
str(big_univLinReg(X.desc, y[ind.train],
                   covar.train = covar[ind.train, ],
                   ind.train = ind.train))
summary(lm(y ~ X1 + covar, subset = ind.train))$coefficients[2, ]
}
\seealso{
\link[stats:lm]{lm}
}
