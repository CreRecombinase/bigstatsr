% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/univRegLog.R
\name{big_univRegLog}
\alias{big_univRegLog}
\title{Column-wise logistic regression}
\usage{
big_univRegLog(X, y01.train, ind.train = seq(nrow(X)), covar.train = NULL,
  ncores = 1, tol = 1e-08, maxiter = 20)
}
\arguments{
\item{X}{A \link[bigmemory:big.matrix-class]{big.matrix}.
You shouldn't have missing values in your data.}

\item{y01.train}{Vector of responses, corresponding to \code{ind.train}.
Must be 0s and 1s.}

\item{ind.train}{An optional vector of the row indices that are used,
for the training part. If not specified, all rows are used.}

\item{covar.train}{Matrix of covariables to be added in each model to correct
for confounders (e.g. the scores of PCA), corresponding to \code{ind.train}.
Default is \code{NULL} and corresponds to only adding an Intercept to each model.}

\item{ncores}{Number or cores used. Default doesn't use parallelism.}

\item{tol}{Relative tolerance to assess convergence of the coefficient.
Default is \code{1e-8}.}

\item{maxiter}{Maximum number of iterations before giving up.
Default is \code{20}. Usually, convergence is reached within 3 or 4 iterations.
If there is not convergence,
\link[stats:glm]{glm} is used instead for the corresponding column.}
}
\value{
A data.frame with as elements:
\enumerate{
\item the slopes of each regression,
\item the standard errors of each slope,
\item the number of iteration for each slope. If is \code{NA}, this means that the
algorithm didn't converge, and \link[stats:glm]{glm} was used instead.
\item the z-scores associated with each slope,
\item the p-values associated with each z-score.
}
}
\description{
Slopes of \strong{univariate} logistic regressions of each column
of a \code{big.matrix}, with some other associated statistics.
Covariates can be added to correct for confounders.
}
\examples{
# Simulating some data
data("trees")
N <- nrow(trees)
covar <- matrix(rnorm(N * 3), N)
X <- as.big.matrix(as.matrix(trees))
y <- sample(0:1, size = N, replace = TRUE)

# without covar
print(big_univRegLog(X, y))
for (i in 1:3) {
  print(summary(glm(y ~ trees[, i], family = "binomial"))$coefficients[2, ])
}

# With all data
print(big_univRegLog(X, y, covar.train = covar))
for (i in 1:3) {
  print(summary(glm(y ~ trees[, i] + covar,
                    family = "binomial"))$coefficients[2, ])
}

# With only half of the data
ind.train <- sort(sample(N, N / 2))

print(big_univRegLog(X, y[ind.train], covar.train = covar[ind.train, ],
                     ind.train = ind.train))
for (i in 1:3) {
  print(summary(glm(y ~ trees[, i] + covar, subset = ind.train,
                    family = "binomial"))$coefficients[2, ])
}

}
\seealso{
\link[stats:glm]{glm}
}
