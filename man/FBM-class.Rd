% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FBM.R
\docType{class}
\name{FBM-class}
\alias{FBM-class}
\alias{FBM_RC}
\alias{FBM}
\alias{[,FBM,ANY,ANY,ANY-method}
\alias{[<-,FBM,ANY,ANY,ANY-method}
\alias{dim,FBM-method}
\alias{length,FBM-method}
\alias{typeof,FBM-method}
\title{Class FBM}
\usage{
FBM(nrow, ncol, type = c("double", "integer", "unsigned short",
  "unsigned char", "raw"), init = NULL, backingfile = tempfile(),
  save = FALSE)

\S4method{[}{FBM,ANY,ANY,ANY}(x, i, j, drop = TRUE)

\S4method{[}{FBM,ANY,ANY,ANY}(x, i, j) <- value

\S4method{dim}{FBM}(x)

\S4method{length}{FBM}(x)

\S4method{typeof}{FBM}(x)
}
\arguments{
\item{nrow}{Number of rows.}

\item{ncol}{Number of columns.}

\item{type}{Type of the big.matrix (default is \code{double}). Either
\itemize{
\item \code{"double"}
\item \code{"integer"}
\item \code{"unsigned short"}: can store integer values from 0 to 65535.
It has vocation to become the basis for a \code{FBM.code65536} class for
accessing strings.
\item \code{"raw"} or \code{"unsigned char"}: can store integer values from 0 to 255.
It is the basis for the \link[=FBM.code256-class]{FBM.code256} class for
accessing 256 arbitrary different numeric values.
It is used in \href{https://goo.gl/pHCCmo}{package bigsnpr}.
}}

\item{init}{Either a single value (e.g. \code{0}) or as many value as the number
of elements of the FBM. \strong{Default doesn't initialize the matrix.}}

\item{backingfile}{Path to the file storing the Big Matrix on disk.
An extension ".bk" will be automatically added. Default stores in the
temporary directory.}

\item{save}{Whether to save the result object in an ".rds" file alongside
the backingfile. Default is \code{FALSE}.}

\item{x}{A \link[=FBM.code256-class]{FBM.code256}.}

\item{code}{A numeric vector (of length 256).
You should contruct it with \code{rep(NA_real_, 256)} and then replace the values
which are of interest for you.}
}
\description{
A reference class for storing and accessing matrix-like data stored in files
on disk. This is very similar to Filebacked Big Matrices provided by the
\strong{bigmemory} package. Yet, the implementation is much more lighter.

Wrapper constructor for class \code{FBM}.

Accessor methods for class \code{FBM}. You can use positive and negative indices,
logical indices (that are recycled) and also a matrix of indices (but only
positive ones).

Dimension and type methods for class \code{FBM}.
}

\examples{
X <- FBM(10, 10)
typeof(X)
X[]
X[] <- rnorm(length(X))
X[]

code <- rep(NA_real_, 256)
code[1:3] <- c(1, 3, 5)

X.code <- add_code256(X, code)
X.code[]

# Or directly
X.code2 <- FBM.code256(10, 10, code, init = sample(as.raw(0:3), 100, TRUE))
X.code2[]

}
