% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reglin.R
\name{reglin}
\alias{CoeffsRegLin}
\alias{RsqRegLin}
\alias{reglin}
\title{Operations of linear regression}
\usage{
RsqRegLin(X, y, ind.train = seq(nrow(X)))

CoeffsRegLin(X, y, ind.train = seq(nrow(X)))
}
\arguments{
\item{X}{A \link[bigmemory:big.matrix-class]{big.matrix}.
You shouldn't have missing values in your data.}

\item{y}{Vector of responses.}

\item{ind.train}{An optional vector of the row indices that are used,
for the training part. If not specified, all data are used.}
}
\value{
\itemize{
\item \code{RsqRegLin} returns a vector of
the coefficient of determination \eqn{R^2} of each regression,
\item \code{CoeffsRegLin} returns a matrix of the intercepts (first row)
and slopes (second row) of each regression.
}
}
\description{
Operations of \strong{univariate} linear regression
(intercept, slope and coefficient of determination)
on all the columns of a \code{big.matrix}.
}
\examples{
# Simulating some data
N1 <- 3000
N2 <- 1000
x1 <- rnorm(N1, 0.5)
x2 <- rnorm(N2, -0.5)
x <- c(x1, x2)
x.big <- as.big.matrix(cbind(x, x+1, 2*x))

# With all data
y2 <- x + rnorm(length(x), 0, 0.1)
res <- matrix(0, 3, ncol(x.big))
for (j in 1:ncol(x.big)) {
  mylm <- lm(y2 ~ x.big[, j])
  res[1:2, j] <- mylm$coefficients
  res[3, j] <- summary(mylm)$r.squared
}
print(res)
print(rbind(CoeffsRegLin(x.big, y2), RsqRegLin(x.big, y2)))

# With only half of the data
ind.train <- sort(sample(length(x), length(x) / 2))
res <- matrix(0, 3, ncol(x.big))
for (j in 1:ncol(x.big)) {
  mylm <- lm(y2[ind.train] ~ x.big[ind.train, j])
  res[1:2, j] <- mylm$coefficients
  res[3, j] <- summary(mylm)$r.squared
}
print(res)
print(rbind(CoeffsRegLin(x.big, y2, ind.train),
            RsqRegLin(x.big, y2, ind.train)))
}
\seealso{
\link[stats:lm]{lm}
}

